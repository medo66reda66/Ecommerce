@using Ecommerce.ViewModel
@model ProductVM

<div class="container">
    <div class="row mb-3 align-items-center my-3">
        <div class="col-md-6">
            <h2 class="display-6">Create new Product</h2>
        </div>
    </div>

    <div class="row my-3">
        <div class="col-12">
            <form method="post" enctype="multipart/form-data">
                <div class="mb-3">
                    <label for="name" class="form-label">Name</label>
                    <input class="form-control" name="Name">
                    <span class="text-danger" ></span>
                </div>
                <div class="mb-3">
                    <label for="img" class="form-label">Mainimg</label>
                    <input class="form-control" type="file" name="img">
                    <span class="text-danger" ></span>
                </div>
                <div class="mb-3">
                    <label for="description" class="form-label">Description</label>
                    <div class="form-floating">
                        <textarea class="form-control" placeholder="Leave a description here" style="height: 100px" name="Description"></textarea>
                        <label for="description">You Description Here~.</label>
                    </div>
                    <span class="text-danger" ></span>
                </div>
                <div class="mb-3">
                    <label for="Color" class="form-label">Color</label>
                    <div id="colorContainer">
                        <div class="mb-2d-flex align-item-center">
                            <input type="color" class="form-control form-control-color" name="Colors">
                        </div>
                    </div>
                    <button type="button" id="addButtonColor" class="btn btn-primary">+ Add New Color</button>
                </div>
                <div class="mb-3">
                    <label for="img" class="form-label">supimg</label>
                    <input class="form-control" type="file" name="Supimgs" multiple>
                    <span class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <label for="Price" class="form-label">Price</label>
                    <input class="form-control" name="Price">
                    <span class="text-danger" ></span>
                </div>
                <div class="mb-3">
                    <label for="Quantity" class="form-label">Quantity</label>
                    <input class="form-control" name="Quantity">
                    <span class="text-danger" ></span>
                </div>
                <div class="mb-3">
                    <label for="Discount" class="form-label">Discount</label>
                    <input class="form-control" name="Discount">
                    <span class="text-danger" ></span>
                </div>
                <div class="mb-3">
                    <label for="CategoryId" class="form-label">Category Name</label>
                    @* <input type="number" class="form-control" id="CategoryId" name="CategoryId"> *@
                    <select name="CategoryId" class="form-select">
                        <option value="">-- Category Name  --</option>
                        @foreach (var item in Model.Categores)
                        {
                            <option value="@item.Id">@item.Name</option>
                        }
                    </select>
                </div>
                <div class="mb-3">
                    <label for="BrandId" class="form-label">Brand name</label>
                    <select name="BrandId" class="form-select">
                        <option value="">-- Select Brand  --</option>
                        @foreach (var brand in Model.Brands)
                        {
                            <option value="@brand.Id">@brand.Name</option>
                        }
                    </select>
                </div>

                <div class="mb-3">
                    <label for="status" class="form-label">Status</label>
                    <select name="Status" class="form-select">
                        @if (Model.Status)
                        {
                            <option value="true" selected>Active</option>
                            <option value="false">InActive</option>
                        }
                        else
                        {
                            <option value="true">Active</option>
                            <option value="false">InActive</option>
                        }
                    </select>
                    <span class="text-danger" asp-validation-for="Status"></span>
                </div>
                <button type="submit" class="btn btn-primary">Submit</button>
            </form>
        </div>
    </div>
</div>

<script>
    // 1. الحصول على العناصر من الصفحة (الحاوية وزر الإضافة)
    const conateiner = document.getElementById('colorContainer');
    const addBtn = document.getElementById('addButtonColor');

    // 2. مُستمع حدث لـ "زر الإضافة" (addBtn)
    addBtn.addEventListener('click', () => {
        // إنشاء عنصر div جديد لصف الألوان
        var colorRow = document.createElement('div');

        // إضافة الكلاسات اللازمة لتنسيق الصف (باستخدام Bootstrap)
        colorRow.className = 'mb-2 d-flex align-item-center';

        // المحتوى الداخلي للصف: مُحدد لون وزر إزالة
        colorRow.innerHTML = `
            <input type="color" class="form-control form-control-color" name="Colors">
            <button type="Button" class="btn btn-danger btn-sm removeColor">X</button>
        `;

        // إضافة الصف الجديد إلى الحاوية
        conateiner.appendChild(colorRow);
    });

    // 3. مُستمع حدث لـ "الحاوية" (conateiner) للتعامل مع النقر بداخلها (وظيفة الإزالة)
    conateiner.addEventListener('click', (e) => {
        // التحقق مما إذا كان العنصر الذي تم النقر عليه يحتوي على الكلاس 'removeColor' (أي: زر الإزالة)
        if (e.target.classList.contains('removeColor')) {
            // إزالة العنصر الأب لزر الإزالة (وهو الصف colorRow بالكامل)
            e.target.parentElement.remove();
        }
    });
</script>